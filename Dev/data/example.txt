// map
    // keys
    name, 
    csvMap, 
    ground, 
    BGM, 
    BGS, 
    ground-SE, 
    script, 
    events
    // events
        // keys (* means unneccesary)
        id, 
        name, 
        type, 
        *event-status-required, 
        action, 
        status, 
        *lock-player
        param, 
        *subevents, 
        *finished-after-event 

        // action<->param relation
            // let var in () be in param
            // for example test-print("var" = "value") -> param = {"var": "value"}
            test-print()
            save-data()
            play-close-door-sound()
            change-map(
                "to_map": str, 
                "inherit_events": list[str, int], 
                "player_status": {
                    "pos": list[int], // [65, 61], 
                    "status": str // "down_idle"
                }, 
                "is_open_door_sound": bool
            )
            proceed-dialog(
                "message_code": ["1-2", "5-6"], // means message_1 to message_2 and message_5 to message_6
                "is_trigger_available": false // true if it can be triggered again
            )
            play-sound(
                "path": str,  // file path
                "loop": int // loop number
            )
            show-picture(
                "img_path": str, 
                *"is_alpha_animate": bool // true as default
            )
            show-choices(
                "choice_code": list[str], // ["1-2", "4-5"]
                "trigger_event": dict[str, int] // {"1": 5}
            )
            modify-event-status(
                "map": str, 
                "id": int, 
                "status": str
            )

        // events-status-required
            "events-status-required": [
                {"map": "Map02", "id": 2, "status": "finished"},
                {"map": "Map02", "id": 3, "status": "finished"}
            ]

        // subevents
            "subevents": {
                "sync": list[int], 
                "after": list[int]
            }
        
        // finished-after-event // to replace self event after finished
            "finished-after-event": int // event id

    // ground-SE
        "ground-SE": [
            {
                "id": 0, 
                "path": "../Audio/SE/walking_on_hard_floor.ogg"
            }
        ]

// save data
    {
        "proceeding": str // "Map01"
        "player-status": {
            "pos": list[int], 
            "status": str // "down_idle"
        }
        "map-detail": {
            "Map01": {...} // the same as above (will be autoly filled if blank)
        }
    }

